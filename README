1.  Introduction
2.  Non-Free content (in GPL sense)
3.  Track editor
4.  Linux Installation from Source
5.  Windows Installation from Source (Release version)
5.1 Windows Installation from Source, additional notes
6.  Windows Installation from Source (Debug version)
7.  Testing
8.  Getting Help
9.  Running under Valgrind with Linux
10. Changes
11. TODO/Notes


1. Introduction
---------------
First a big welcome, I hope you will enjoy your ride:-)

This is an all in one package of TORCS. Be aware that some included
artwork has non free (in the GPL sense) licenses, you will find a "readme.txt"
in those directories. The rest is either licensed under the GPL or the Free
Art License. If you want to create cars or advanced tracks using the accc tool,
you will require stripe from http://www.cs.sunysb.edu/~stripe.

Best regards

Bernhard


2. Non-Free content (in GPL sense)
----------------------------------
Here the list with the directories containing non free content, look at the
readme.txt for details:
- data/cars/models/pw-*
- data/cars/models/kc-*


3. Track editor
---------------
The track editor is not included in this distribution, you can get it from
http://www.berniw.org/trb/download/trackeditor-0.6.2c.tar.bz2, the sources
are included in the jar. The sources are also available here:
http://sourceforge.net/projects/trackeditor.


4. Linux Installation from Source
---------------------------------
- Requires plib 1.8.5, FreeGLUT or GLUT, be aware to compile plib with -fPIC
  on AMD64 if you run a 64 bit version of Linux. Be aware that maybe just
  1.8.5 works.
- Untar the archive
- cd into the torcs-1.3.4 directory
- ./configure (use --help for showing the options, of interest might be
  --enable-debug and --disable-xrandr).
- make
- make install
- make datainstall
- start with "torcs"

Command line arguments:
* -l list the dynamically linked libraries
* -d run under gdb and print stack trace on exit, makes most sense when compile
     with --enable-debug
* -g run under Valgrind (requires a debug build for useful results)
* -e display the commands to issue when you want to run under gdb
* -s disable multitexturing, important for older graphics cards
* -m use X mouse cursor and do not hide it during races
* -r pathtoraceconfigfile, run race from command line only, for testing and AI
     training, see FAQ for details
* -k (keep) suppress calls to dlclose to keep modules loaded (for Valgrind runs,
     to avoid "??" in the call stack)


5. Windows Installation from Source (Release version)
-----------------------------------------------------
- hint: you can have a release and a debug build side by side, the release
  version goes to "runtime" and the debug to "runtimed".
- requires VS 6 (tested with sp6) or VS 2008 (tested with sp1), VS2010 is reported
  to work as well. For express editions or VS 2012 read notes in section 5.1.
- untar the archive into a path without whitespaces and special characters.
- cd into the torcs-1.3.4 directory
- run setup_win32.bat
- run setup_win32-data-from-CVS.bat
- select the TORCS workspace (TORCS.dsw for VS 6) or solution (TORCS.sln
  for VS 2008), select the w32-Release version.
- compile project (0 warnings)
- cd into the "runtime" directory.
- run "wtorcs.exe"

Command line arguments:
* -s disable multitexturing, important for older graphics cards
* -r pathtoraceconfigfile, run race from command line only, for testing and AI
     training, see FAQ for details 


5.1 Windows Installation from Source, additional notes
------------------------------------------------------
5.1.1 VS 2005 Express (based on imported dsw), reported by Eric Espie:
- Run up to the setup*.bat step in the above instructions, then open the TORCS.dsw
  file and do the following changes
- in wtorcs -> Source Files (Solution explorer) exclude torcs.rc
- in client -> Source Files add the file errno.cpp to the solution (located
  in src/libs/client)
- change in the properties of all the sub-projects :
        in "Configuration Properties -> Link Editor -> Entry : Ignore Specific Library"
        change LIBCD in LIBC if present.

5.1.2 VS 2005 Express (based on VS2008 sln), reported by Wolf-Dieter Beelitz:
- Edit all vcproj (=xml) files and set the "version" from 9.00 to 8.00
- Follow the instructions above.

5.1.3 VS 2008 Express, reported by Stacey Pritchett:
- in wtorcs -> Source Files (Solution explorer) exclude torcs.rc
- Follow the instructions above.

5.1.4 VS 2012, reported by SteveO:
- In every project (except TORCS) add /SAFESEH:NO into the Additional Options
  (Properties-Configuration Properties-Linker-Command Line), see also
  http://msdn.microsoft.com/en-us/library/9a89h429.aspx.


6. Windows Installation from Source (Debug version)
---------------------------------------------------
- hint: you can have a debug and a release build side by side, the debug
  version goes to "runtimed" and the release to "runtime".
- requires VS 6 (tested with sp6) or VS 2008 (tested with sp1), VS2010 is reported
  to work as well. For express editions or VS 2012 read notes in section 5.1.
- untar the archive into a path without whitespaces and special characters.
- cd into the torcs-1.3.4 directory
- run setup_win32_debug.bat
- run setup_win32-data-from-CVS_debug.bat
- select the TORCS workspace (TORCS.dsw for VS 6) or solution (TORCS.sln
  for VS 2008), select the w32-Debug version
- compile project (0 warnings)
- cd into the "runtimed" directory.
- run "wtorcs.exe"

Command line arguments:
* -s disable multitexturing, important for older graphics cards
* -r pathtoraceconfigfile, run race from command line only, for testing and AI
     training, see FAQ for details 


7. Testing
----------
Please pick bugs below and retest them (you can find the original reports on
http://sourceforge.net/tracker/?group_id=3777&atid=103777, select "any" bugs to
see as well the closed ones). If you find problems which should be already
fixed or new ones please report them to the torcs-users mailing list.


8. Getting Help
---------------
During the game press F1. For more in depth information visit www.torcs.org,
you find there a lot of information, look at the documentation section on
the left, have as well a look into the list of howto's. If you are stuck
have a look into the FAQ to learn how and where to report a problem.


9. Running under Valgrind with Linux
------------------------------------
First you need to build a debug version of TORCS, make sure that the CFLAGS,
CPPFLAGS and CXXFLAGS environment variables are empty (usually they are). Then
run "make distclean", then the configure script with the option --enable-debug
and all other options which you require, build and install as usual.

To find memory leaks run first (Valgrind must be available in the path):
./torcs -g

You will find the logfile valgrind.log in the .torcs directory. If you have
"??" in the call stack, you can run TORCS with the -k option to avoid unloading
the modules:
./torcs -g -k

You should use -k just to investigate the "??" in the call stacks, because the
suppression of dlclose can hide problems related with module release and cause
problems because modules are just recycled but not reloaded.

Of course you can use this with the console (command line) mode as well, e.g.:
./torcs -g -r ~/.torcs/config/raceman/champ.xml
./torcs -g -k -r ~/.torcs/config/raceman/dtmrace.xml

Some additional notes:
- Valgrind (version 3.6.1) reports on systems with the ATI flgrx OpenGL driver (8.961)
  lots of leaks, according AMD Valgrind misinterprets memory blocks handed over to the
  kernel. When I wrote suppressions the flgrx driver hung the X Server up, conclusion:
  Give it a try (maybe another Valgrind/driver/kernel combination does/will do better),
  but if you run in the mentioned problems, just use the TORCS command line mode or
  install temporarily the Open Source ATI driver alternative, maybe this does do better
  (not tested, send me a report;-) )
- You can edit the "torcs" script and add "--leak-check=full --show-reachable=yes"
  to see what is still reachable at exit. This is useful to reduce the amount of cached
  xml file handles or hunt down missing releases of handles (they are not reported
  usually because they are reachable via the cache), beware, it is perfectly
  fine that the GUI and some handles are held permanent.


10. Changes
-----------


Changes since 1.3.4
-------------------
- Updated history (Bernhard).
- Applied linking patch for systems with liker option "--as-needed" (Ubuntu), patch provided
  by Jasper van de Ven (Jasper, Bernhard).
- Updated robotgen script for recent changes, patch provided by Jasper van de Ven
  (Jasper, Bernhard).
- TRB: Updated installdb.php to allow longer session keys (Bernhard).
- TRB: Added best qualifying lap times per event in track view (Bernhard).
- TRB: Adjusted styling in templates towards themeing (Bernhard).
- TRB: Added public download of robots when event is done (Bernhard).
- TRB: Added TORCS versioning for races (Bernhard).
- TRB: Added installation instructions (Bernhard).
- Fixed bug #98 (non buttons for non leading human player) reported by Jon Zabala. The problem
  was floating point comparison with different types (lastKeyUpdate != s->currentTime)
  (Jon, Bernhard).
- Added build notes for VS2005 Express, VS2008 Express, VS2010, VS2012 provided by Eric,
  Wolf-Dieter, Stacey and Steve (Eric, Wolf-Dieter, Stacey, Steve, Bernhard).
- Fixed accc allocating too small array for texture coordinates in pathologic cases (e.g.
  just 1 or 2 surfaces per object, or all surfaces specially mapped) (Bernhard).
- Fixed car center of car1-stock1 (Bernhard).
- Fixed car center of car8-trb1 (Bernhard).
- New category and car (4-speed stock car) (Bernhard).
- Fix in RtDistToPit to ensure that the value gets not bigger than the track length, reported
  by Daniel Schellhammer (Daniel, Bernhard).
- Fixed trackgen state consistency for border height, height is now carried over if there is
  no new definition given (Bernhard).
- Fixed track barriers not taking into account the texture offset property in trackgen
  ("texture start on boundary") (Bernhard).
- Adopted download location of trackeditor in README (Bernhard).
- Fixed car flying off with extreme suspension settings, see
  http://www.berniw.org/trb/forum/showthread.php?topicid=3640 (Bernhard).
- Fixed applied force when wheel has lost touch with the ground (Bernhard).
- Added suspension parameter to set up slow->fast thresholds, "fast bump threshold" and
  "fast rebound threshold" (Bernhard).
- Adopted robots to brake full when in "landing zone" for saver pit stops (Bernhard).
- Modified LSD (limited slip differential) from one way to 1.5 way, modified behaviour for
  unlocked operation, see car8-trb1 as example (Bernhard).
- Fixed moment calculation for free differential, the sum of the moments was ok, but it
  created "virtual energy" (Bernhard).
- Fixed slip calculation for limited slip differential, from fabs(v1-v2)/fabs(v1+v2) to
  fabs(v1-v2)/(fabs(v1)+fabs(v2))), this ensures that the function stays between 0..1,
  important mostly at initial conditions (Bernhard).
- Fixed viscous coupler not operating in given parameter range (Bernhard).
- Added more tracks to championship mode (Bernhard).
- More improvments in wheel.cpp for handling extreme initial conditions, reviewed the
  suspension velocity scaling (it is fine) (Bernhard).
- Adjusted drag coefficient of p406 (Bernhard).
- Changed suspension defaults for fast bump and rebound to the slow values (so if just slow
  values are given the fast values are the same as the slow ones, so you get an "ordinary"
  damper, previous default was 0.0) (Bernhard).
- Implemented 3rd element, "spring", "suspension course", "slow bump" and "slow rebound" in
  the axle section to set it up. The suspension course defines when the element kicks in, so
  "3rd suspension course" * "bellcrank of ordinary suspension" should be significantly
  smaller than the ride height (otherwise the element is active all the time) (Bernhard).
- Tiny optimization in anti rollbar code (Bernhard).
- Added initial support for setting up cars, work in progress (Bernhard).
- Added RtGetCarPitSetupFilename, RtSaveCarPitSetup, RtSaveCarPitSetup, RtLoadCarSetup and
  RtInitCarPitSetup to robottools (Bernhard).
- Adopted builds to carsetupscreen (Bernhard).
- Bugfix regarding editbox and  enable/disable, did not matter so far because it was not
  used like this (Bernhard).
- Added button enable/disable logic in pitmenu (e.g. just enabe "stop and go" if a penalty
  is pending") (Bernhard).
- Finished car setup screen (Bernhard).
- Use setups in human driver (Bernhard).
- Mute sound during in game menus and on "pause" (Bernhard).
- Removed plib sound backend choice in menu (Bernhard).
- Adopted p406 car and associated category to allow useful value ranges for setups
  (Bernhard).
- Adopted car1/2/3/4/5/6/7/8-trb1 car and trb1 category to allow useful value ranges for
  setups, trb1 cars support now the third element (Bernhard).
- Adopted car1-ow1 and category to allow useful value ranges for setups, ow1 cars
  support now the third element (Bernhard).
- Adopted car1-stock1 and category to allow useful value ranges for setups, changed
  differential from free to limited slip (Bernhard).
- Adopted car1-stock2 and category to allow useful value ranges for setups (Bernhard).
- Added handling of invalid viscous coupler parameters, because user can change those now
  in the car setup GUI (min > max) (Bernhard).
- Adopted Offroad-4WD-GrA category for setup screen (Bernhard).
- Adopted pw-206/306/corolla/evoiv/focus/impreza-wrc car settings, changed front
  differential from free to limited slip (Bernhard).
- Adopted Track-4WD-GrB category and 155-DTM car for setup screen (Bernhard).
- Adopted Track-RWD-GrB category and acura-nsx-sz car for setup screen (Bernhard).
- Adopted Offroad-RWD-GrA category and bajy-bug/buggy car for setup screen (Bernhard).
- Adopted Historic category and 2000gt, 5300gt, A110, TZ2, AH3000MkII, Cobra427,
  Cobra DS, Cornero, T-Top, Gtb4-Daytona, DB4Z, AM DBS, 246GT, Ghibli, Grifo, GT40,
  250GTO and 330P4 cars for setup screen (Bernhard).
- Refitted various Historic cars with real world data (Bernhard).
- Adopted car1-trb3 car and trb3 category for setup screen (Bernhard).
- Adopted robots to setup changes (Bernhard).
- Changed version to 1.3.5-test1 (Bernhard).
- Updated Windows installer (Bernhard).
- Released as 1.3.5-test1 (Bernhard).
- Added support for unit "lbf" in params.cpp (Bernhard).
- Changed unit from lbs to lbf in carsetupscreen for catalogue like spring/damper rates
  (with lbs the problem is that it is not detected as force, so the 9.80665 (G) is not
  taken into account) (Bernhard).
- Fixed some z-fighting on wheel-2 (Bernhard).
- Added raceline to wheel-2 (Bernhard).
- Adjusted lighting of wheel-2, brightened shadow map (Bernhard).
- Removed isnan/isinf check in simu.cpp on gear variable, reported by Rene Ladan
  (Rene, Bernhard).
- Fixed compilation of simuv3 (Bernhard).


11. TODO/Notes
--------------


TODO for 1.3.5
--------------
- Finish new e-track-2
- Review wheel specular values (seen weird rendering on youtube, not reproducable here)
- Timed races (e.g. 24h).
- Add raceline to e-track-6.
- Fix pending penalties at the end of the race (transform to penalty time, release memory)
- Review penalty/clearing
- add wdbees minspeed

TODO for 1.3.6/x (squeezing the last drop out of 1.3)
----------------
- Review and eventually apply mac os x build
- Review MorphOS changes
- Review/reduce dynamic memory allocation/release during rendering

eventually (otherwise in 1.4):
- Skidmarks/shadows masking with stencil
- Phong specular highlights/in shadow occlusion
- Skidmarks to simu/persistency (get rid of frame rate dependency)
- Rules/Modes which do not requrie 1.4 changes
- Configurable rules in racemanager (no damage, no fuel, damage/fuelx2/3/4/5, etc.)
- Store all graphics engine state in a context struct/object (to be able to render telemetry
  in the car setup screen or during a running session)
- track extensions (crossings, split/join, variable width)


TODO for 1.4.0
--------------
- Robot interface adoptions (maybe askfeatures, callonce, grid, postprocess, we will see...)
- More Rules.
- Apply SDL patch from Brian Gavin (rescheduled to 1.4.0 to get to to test
  seriously).
- Update OpenAL to 1.1, fix use of deprecated stuff.
- Car asignment for human players.
- Sound (alut depricated/scheduling for lots of cars)
- Make it possible for a robot module to carry any arbitrary number of
  drivers (instead of static 10).
- Pace car and trucks to remove wrecks (remove "virtual" crane).
- Replace wav sounds with ogg?

TODO TRB
--------
- RSS feed (suggested by Quinten)

TODO for Compliance
-------------------
155-DTM -> replace with car10-trb1
acura -> replace with car9-trb1
mc-larenf1 -> replace with car10-trb1
p406 -> replace with car1-trb4
rework buggy, baja bug
replace rally cars
Remove invalid geometry from tracks 
convert force units internally from lbs to lbf


Later:
-------------------
- Decide about plib (not maintained anymore?) -> integration?
- Refactor trackgen (left/right -> half the code, maybe more)
- Mixed axis controller (under linux some analouge buttons generate a button and axis
  event, this is a problem for detection/calibration with the current workflow, e.g.
  ps3 controller buttons l2/r2)
- Ongoing for every release: rework free car models (several holes, no
  emmissive color of lod (model becomes dark at a certain distance), single
  sided, add cockpit, lods).
- Ongoing for every release: Improve visual quality of some existing tracks
  (e.g. e-track-2).
- Texture clamp to edge needs explicit setting in nvidia driver tab in windows,
  have a look into that (otherwise the border is not taken as color around the
  pit door, pits are quite dark around the logo).
- fix sound in split screen multiplayer.
- Ongoing: Replace some defines with "static const" to be able to see the
  symbol name when debugging.
- move berniw/bt spline code into math to share it.
- hunt down all glGet* crap during the simulation.
- (Problem when driver list changes during championship.)
- (add proper init/shutdown to every module which is not bound to anything else
  but the loading/init/shutdown/unloading process.)


TODO for 1.9.x (pre 2.0 series, no release)
--------------
- Design networking, how to embed it into TORCS?
- Networking prototype.
- Gaming modes suitable for online races.
- Cockpit inside view.
- Set up infrastructure for reading binary data files bit with and endianness independent.

TODO for 2.0.0
--------------
- Initial Networking.


TODO LATER
----------
- Add validation for the case no driver selected, do not exit to
  console.
- Networking (2.0).
- SMP simulaton core (for myself).
- Replays.
- Telemetry recorder/viewer.
- Phong specular highlights (optional env, cube or GLSL).
- Shadowmapped/Stenciled dynamic car shadows.
- so/dll with libtool, common code?
- 3d-grass.
- Dynamic sky.
- TRB integration.
- Fix/create new simu/switch to updated/new simu.
- Show just fitting resolutions for fullscreen/change for windowed mode.
- Separate components more clean (e.g. ssgInit should go back to
  ssggraph, etc.)
- Fix windows project such that it compiles in all locations (currently it
  fails if special characters are in the path).
- Avoid cameras cutting the landscape.
- Start position marks on track (same technique like fake shadow, skids).
- Start procedures (pace car, etc).
- Better transparency for track objects.
- More driving aids, switch to AI and back.
- localization (e.g English, French, German, ...).
- Fix engine inertia/s of F1 cars, check/fix all other cars as well.
- Opponent sets for human players (e.g 20 Open Wheel cars, etc.)
- Free camera controlled with mouse and keys.
- Automate GL features verification (hopefully obsolete).


IDEAS FOR MUCH LATER
--------------------
- Weather.
- Dynamic day/night-time, car lights with projective texturing.
- Pit crew.
- Dynamic "intelligent" Objects (e.g. Helicopter)
- Solid/dynamic obstacles.
- Nicer trees etc, terrain LOD.
- Inside view.
- Animated driver.
- Dirt on cars, inside view.
- free terrain.
- Open track dynamically generated when driving.
- Random track generator.
- Separate pit path, Y segments, etc?
- TORCS as benchmark or screensaver?
- Force feedback.
- (Compressed data files?)
- Story mode with message.
- Traffic simulator